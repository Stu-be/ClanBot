#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClanBot
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-ClasherDynasty-20140714184957")]
	public partial class ClasherDynastyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEnemyBase(EnemyBase instance);
    partial void UpdateEnemyBase(EnemyBase instance);
    partial void DeleteEnemyBase(EnemyBase instance);
    partial void InsertWar(War instance);
    partial void UpdateWar(War instance);
    partial void DeleteWar(War instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void InsertUserWarning(UserWarning instance);
    partial void UpdateUserWarning(UserWarning instance);
    partial void DeleteUserWarning(UserWarning instance);
    partial void InsertWarning(Warning instance);
    partial void UpdateWarning(Warning instance);
    partial void DeleteWarning(Warning instance);
    partial void InsertMembership(Membership instance);
    partial void UpdateMembership(Membership instance);
    partial void DeleteMembership(Membership instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCurWarAttack(CurWarAttack instance);
    partial void UpdateCurWarAttack(CurWarAttack instance);
    partial void DeleteCurWarAttack(CurWarAttack instance);
    partial void InsertAttackStrat(AttackStrat instance);
    partial void UpdateAttackStrat(AttackStrat instance);
    partial void DeleteAttackStrat(AttackStrat instance);
    partial void InsertWarNew(WarNew instance);
    partial void UpdateWarNew(WarNew instance);
    partial void DeleteWarNew(WarNew instance);
        #endregion

        public ClasherDynastyDataContext() :
                base(global::ClanBot.Properties.Settings.Default.aspnet_ClasherDynasty_20140714184957ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public ClasherDynastyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClasherDynastyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClasherDynastyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClasherDynastyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EnemyBase> EnemyBases
		{
			get
			{
				return this.GetTable<EnemyBase>();
			}
		}
		
		public System.Data.Linq.Table<War> Wars
		{
			get
			{
				return this.GetTable<War>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<UserWarning> UserWarnings
		{
			get
			{
				return this.GetTable<UserWarning>();
			}
		}
		
		public System.Data.Linq.Table<Warning> Warnings
		{
			get
			{
				return this.GetTable<Warning>();
			}
		}
		
		public System.Data.Linq.Table<EnemyBasesView> EnemyBasesViews
		{
			get
			{
				return this.GetTable<EnemyBasesView>();
			}
		}
		
		public System.Data.Linq.Table<Membership> Memberships
		{
			get
			{
				return this.GetTable<Membership>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<CurWarAttack> CurWarAttacks
		{
			get
			{
				return this.GetTable<CurWarAttack>();
			}
		}
		
		public System.Data.Linq.Table<AttackStrat> AttackStrats
		{
			get
			{
				return this.GetTable<AttackStrat>();
			}
		}
		
		public System.Data.Linq.Table<WarNew> WarNews
		{
			get
			{
				return this.GetTable<WarNew>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tvfGetAttendance", IsComposable=true)]
		public IQueryable<tvfGetAttendanceResult> tvfGetAttendance([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string player)
		{
			return this.CreateMethodCallQuery<tvfGetAttendanceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), player);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tvfGetCurSeasonAttendance", IsComposable=true)]
		public IQueryable<tvfGetCurSeasonAttendanceResult> tvfGetCurSeasonAttendance([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string player)
		{
			return this.CreateMethodCallQuery<tvfGetCurSeasonAttendanceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), player);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MembersListDetails")]
		public int MembersListDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="WhereAndOrder", DbType="NVarChar(200)")] string whereAndOrder, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeasonStart", DbType="NVarChar(50)")] string seasonStart)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), whereAndOrder, seasonStart);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tvfMembersAttendance", IsComposable=true)]
		public IQueryable<tvfMembersAttendanceResult> tvfMembersAttendance()
		{
			return this.CreateMethodCallQuery<tvfMembersAttendanceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClaimBase")]
		public int ClaimBase([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string uid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string eb)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid, eb);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnemyBases")]
	public partial class EnemyBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EnemyBaseID;
		
		private System.Nullable<short> _EnemyBaseNo;
		
		private System.Nullable<System.Guid> _WarID;
		
		private System.Nullable<bool> _Available;
		
		private System.Nullable<short> _Stars;
		
		private string _Notes;
		
		private EntitySet<CurWarAttack> _CurWarAttacks;
		
		private EntityRef<War> _War;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnemyBaseIDChanging(System.Guid value);
    partial void OnEnemyBaseIDChanged();
    partial void OnEnemyBaseNoChanging(System.Nullable<short> value);
    partial void OnEnemyBaseNoChanged();
    partial void OnWarIDChanging(System.Nullable<System.Guid> value);
    partial void OnWarIDChanged();
    partial void OnAvailableChanging(System.Nullable<bool> value);
    partial void OnAvailableChanged();
    partial void OnStarsChanging(System.Nullable<short> value);
    partial void OnStarsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public EnemyBase()
		{
			this._CurWarAttacks = new EntitySet<CurWarAttack>(new Action<CurWarAttack>(this.attach_CurWarAttacks), new Action<CurWarAttack>(this.detach_CurWarAttacks));
			this._War = default(EntityRef<War>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyBaseID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EnemyBaseID
		{
			get
			{
				return this._EnemyBaseID;
			}
			set
			{
				if ((this._EnemyBaseID != value))
				{
					this.OnEnemyBaseIDChanging(value);
					this.SendPropertyChanging();
					this._EnemyBaseID = value;
					this.SendPropertyChanged("EnemyBaseID");
					this.OnEnemyBaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyBaseNo", DbType="SmallInt")]
		public System.Nullable<short> EnemyBaseNo
		{
			get
			{
				return this._EnemyBaseNo;
			}
			set
			{
				if ((this._EnemyBaseNo != value))
				{
					this.OnEnemyBaseNoChanging(value);
					this.SendPropertyChanging();
					this._EnemyBaseNo = value;
					this.SendPropertyChanged("EnemyBaseNo");
					this.OnEnemyBaseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WarID
		{
			get
			{
				return this._WarID;
			}
			set
			{
				if ((this._WarID != value))
				{
					if (this._War.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarIDChanging(value);
					this.SendPropertyChanging();
					this._WarID = value;
					this.SendPropertyChanged("WarID");
					this.OnWarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="SmallInt")]
		public System.Nullable<short> Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this.OnStarsChanging(value);
					this.SendPropertyChanging();
					this._Stars = value;
					this.SendPropertyChanged("Stars");
					this.OnStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(100)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnemyBase_CurWarAttack", Storage="_CurWarAttacks", ThisKey="EnemyBaseID", OtherKey="EnemyBaseID")]
		public EntitySet<CurWarAttack> CurWarAttacks
		{
			get
			{
				return this._CurWarAttacks;
			}
			set
			{
				this._CurWarAttacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="War_EnemyBase", Storage="_War", ThisKey="WarID", OtherKey="WarID", IsForeignKey=true)]
		public War War
		{
			get
			{
				return this._War.Entity;
			}
			set
			{
				War previousValue = this._War.Entity;
				if (((previousValue != value) 
							|| (this._War.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._War.Entity = null;
						previousValue.EnemyBases.Remove(this);
					}
					this._War.Entity = value;
					if ((value != null))
					{
						value.EnemyBases.Add(this);
						this._WarID = value.WarID;
					}
					else
					{
						this._WarID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("War");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CurWarAttacks(CurWarAttack entity)
		{
			this.SendPropertyChanging();
			entity.EnemyBase = this;
		}
		
		private void detach_CurWarAttacks(CurWarAttack entity)
		{
			this.SendPropertyChanging();
			entity.EnemyBase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.War")]
	public partial class War : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WarID;
		
		private string _EnemyClan;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Size;
		
		private System.Nullable<int> _Stars;
		
		private System.Nullable<int> _EnemyStars;
		
		private System.Nullable<int> _Flats;
		
		private System.Nullable<int> _Defends;
		
		private System.Nullable<decimal> _Damage;
		
		private System.Nullable<decimal> _EnemyDamage;
		
		private string _location;
		
		private string _ClanTag;
		
		private EntitySet<EnemyBase> _EnemyBases;
		
		private EntitySet<CurWarAttack> _CurWarAttacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarIDChanging(System.Guid value);
    partial void OnWarIDChanged();
    partial void OnEnemyClanChanging(string value);
    partial void OnEnemyClanChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnStarsChanging(System.Nullable<int> value);
    partial void OnStarsChanged();
    partial void OnEnemyStarsChanging(System.Nullable<int> value);
    partial void OnEnemyStarsChanged();
    partial void OnFlatsChanging(System.Nullable<int> value);
    partial void OnFlatsChanged();
    partial void OnDefendsChanging(System.Nullable<int> value);
    partial void OnDefendsChanged();
    partial void OnDamageChanging(System.Nullable<decimal> value);
    partial void OnDamageChanged();
    partial void OnEnemyDamageChanging(System.Nullable<decimal> value);
    partial void OnEnemyDamageChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnClanTagChanging(string value);
    partial void OnClanTagChanged();
    #endregion
		
		public War()
		{
			this._EnemyBases = new EntitySet<EnemyBase>(new Action<EnemyBase>(this.attach_EnemyBases), new Action<EnemyBase>(this.detach_EnemyBases));
			this._CurWarAttacks = new EntitySet<CurWarAttack>(new Action<CurWarAttack>(this.attach_CurWarAttacks), new Action<CurWarAttack>(this.detach_CurWarAttacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WarID
		{
			get
			{
				return this._WarID;
			}
			set
			{
				if ((this._WarID != value))
				{
					this.OnWarIDChanging(value);
					this.SendPropertyChanging();
					this._WarID = value;
					this.SendPropertyChanged("WarID");
					this.OnWarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyClan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EnemyClan
		{
			get
			{
				return this._EnemyClan;
			}
			set
			{
				if ((this._EnemyClan != value))
				{
					this.OnEnemyClanChanging(value);
					this.SendPropertyChanging();
					this._EnemyClan = value;
					this.SendPropertyChanged("EnemyClan");
					this.OnEnemyClanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
		public System.Nullable<int> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="Int")]
		public System.Nullable<int> Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this.OnStarsChanging(value);
					this.SendPropertyChanging();
					this._Stars = value;
					this.SendPropertyChanged("Stars");
					this.OnStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyStars", DbType="Int")]
		public System.Nullable<int> EnemyStars
		{
			get
			{
				return this._EnemyStars;
			}
			set
			{
				if ((this._EnemyStars != value))
				{
					this.OnEnemyStarsChanging(value);
					this.SendPropertyChanging();
					this._EnemyStars = value;
					this.SendPropertyChanged("EnemyStars");
					this.OnEnemyStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flats", DbType="Int")]
		public System.Nullable<int> Flats
		{
			get
			{
				return this._Flats;
			}
			set
			{
				if ((this._Flats != value))
				{
					this.OnFlatsChanging(value);
					this.SendPropertyChanging();
					this._Flats = value;
					this.SendPropertyChanged("Flats");
					this.OnFlatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defends", DbType="Int")]
		public System.Nullable<int> Defends
		{
			get
			{
				return this._Defends;
			}
			set
			{
				if ((this._Defends != value))
				{
					this.OnDefendsChanging(value);
					this.SendPropertyChanging();
					this._Defends = value;
					this.SendPropertyChanged("Defends");
					this.OnDefendsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Damage
		{
			get
			{
				return this._Damage;
			}
			set
			{
				if ((this._Damage != value))
				{
					this.OnDamageChanging(value);
					this.SendPropertyChanging();
					this._Damage = value;
					this.SendPropertyChanged("Damage");
					this.OnDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyDamage", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> EnemyDamage
		{
			get
			{
				return this._EnemyDamage;
			}
			set
			{
				if ((this._EnemyDamage != value))
				{
					this.OnEnemyDamageChanging(value);
					this.SendPropertyChanging();
					this._EnemyDamage = value;
					this.SendPropertyChanged("EnemyDamage");
					this.OnEnemyDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanTag", DbType="NVarChar(15)")]
		public string ClanTag
		{
			get
			{
				return this._ClanTag;
			}
			set
			{
				if ((this._ClanTag != value))
				{
					this.OnClanTagChanging(value);
					this.SendPropertyChanging();
					this._ClanTag = value;
					this.SendPropertyChanged("ClanTag");
					this.OnClanTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="War_EnemyBase", Storage="_EnemyBases", ThisKey="WarID", OtherKey="WarID")]
		public EntitySet<EnemyBase> EnemyBases
		{
			get
			{
				return this._EnemyBases;
			}
			set
			{
				this._EnemyBases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="War_CurWarAttack", Storage="_CurWarAttacks", ThisKey="WarID", OtherKey="WarID")]
		public EntitySet<CurWarAttack> CurWarAttacks
		{
			get
			{
				return this._CurWarAttacks;
			}
			set
			{
				this._CurWarAttacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnemyBases(EnemyBase entity)
		{
			this.SendPropertyChanging();
			entity.War = this;
		}
		
		private void detach_EnemyBases(EnemyBase entity)
		{
			this.SendPropertyChanging();
			entity.War = null;
		}
		
		private void attach_CurWarAttacks(CurWarAttack entity)
		{
			this.SendPropertyChanging();
			entity.War = this;
		}
		
		private void detach_CurWarAttacks(CurWarAttack entity)
		{
			this.SendPropertyChanging();
			entity.War = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		private System.Nullable<short> _RoleRank;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRoleRankChanging(System.Nullable<short> value);
    partial void OnRoleRankChanged();
    #endregion
		
		public Role()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleRank", DbType="SmallInt")]
		public System.Nullable<short> RoleRank
		{
			get
			{
				return this._RoleRank;
			}
			set
			{
				if ((this._RoleRank != value))
				{
					this.OnRoleRankChanging(value);
					this.SendPropertyChanging();
					this._RoleRank = value;
					this.SendPropertyChanged("RoleRank");
					this.OnRoleRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserWarnings")]
	public partial class UserWarning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private int _WarningId;
		
		private System.DateTime _WarningDateTime;
		
		private EntityRef<Warning> _Warning;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnWarningIdChanging(int value);
    partial void OnWarningIdChanged();
    partial void OnWarningDateTimeChanging(System.DateTime value);
    partial void OnWarningDateTimeChanged();
    #endregion
		
		public UserWarning()
		{
			this._Warning = default(EntityRef<Warning>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WarningId
		{
			get
			{
				return this._WarningId;
			}
			set
			{
				if ((this._WarningId != value))
				{
					if (this._Warning.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarningIdChanging(value);
					this.SendPropertyChanging();
					this._WarningId = value;
					this.SendPropertyChanged("WarningId");
					this.OnWarningIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningDateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime WarningDateTime
		{
			get
			{
				return this._WarningDateTime;
			}
			set
			{
				if ((this._WarningDateTime != value))
				{
					this.OnWarningDateTimeChanging(value);
					this.SendPropertyChanging();
					this._WarningDateTime = value;
					this.SendPropertyChanged("WarningDateTime");
					this.OnWarningDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warning_UserWarning", Storage="_Warning", ThisKey="WarningId", OtherKey="WarningId", IsForeignKey=true)]
		public Warning Warning
		{
			get
			{
				return this._Warning.Entity;
			}
			set
			{
				Warning previousValue = this._Warning.Entity;
				if (((previousValue != value) 
							|| (this._Warning.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warning.Entity = null;
						previousValue.UserWarnings.Remove(this);
					}
					this._Warning.Entity = value;
					if ((value != null))
					{
						value.UserWarnings.Add(this);
						this._WarningId = value.WarningId;
					}
					else
					{
						this._WarningId = default(int);
					}
					this.SendPropertyChanged("Warning");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserWarning", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserWarnings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserWarnings.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warnings")]
	public partial class Warning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WarningId;
		
		private string _WarningName;
		
		private string _WarningDescription;
		
		private EntitySet<UserWarning> _UserWarnings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarningIdChanging(int value);
    partial void OnWarningIdChanged();
    partial void OnWarningNameChanging(string value);
    partial void OnWarningNameChanged();
    partial void OnWarningDescriptionChanging(string value);
    partial void OnWarningDescriptionChanged();
    #endregion
		
		public Warning()
		{
			this._UserWarnings = new EntitySet<UserWarning>(new Action<UserWarning>(this.attach_UserWarnings), new Action<UserWarning>(this.detach_UserWarnings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WarningId
		{
			get
			{
				return this._WarningId;
			}
			set
			{
				if ((this._WarningId != value))
				{
					this.OnWarningIdChanging(value);
					this.SendPropertyChanging();
					this._WarningId = value;
					this.SendPropertyChanged("WarningId");
					this.OnWarningIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarningName
		{
			get
			{
				return this._WarningName;
			}
			set
			{
				if ((this._WarningName != value))
				{
					this.OnWarningNameChanging(value);
					this.SendPropertyChanging();
					this._WarningName = value;
					this.SendPropertyChanged("WarningName");
					this.OnWarningNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningDescription", DbType="NVarChar(200)")]
		public string WarningDescription
		{
			get
			{
				return this._WarningDescription;
			}
			set
			{
				if ((this._WarningDescription != value))
				{
					this.OnWarningDescriptionChanging(value);
					this.SendPropertyChanging();
					this._WarningDescription = value;
					this.SendPropertyChanged("WarningDescription");
					this.OnWarningDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warning_UserWarning", Storage="_UserWarnings", ThisKey="WarningId", OtherKey="WarningId")]
		public EntitySet<UserWarning> UserWarnings
		{
			get
			{
				return this._UserWarnings;
			}
			set
			{
				this._UserWarnings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserWarnings(UserWarning entity)
		{
			this.SendPropertyChanging();
			entity.Warning = this;
		}
		
		private void detach_UserWarnings(UserWarning entity)
		{
			this.SendPropertyChanging();
			entity.Warning = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnemyBasesView")]
	public partial class EnemyBasesView
	{
		
		private System.Nullable<short> _BASE__;
		
		private string _CLAIMED_BY;
		
		private System.Nullable<int> _ATTACKS;
		
		private System.Nullable<short> _STARS;
		
		private System.Nullable<int> _DATETIME;
		
		private string _BEST;
		
		private string _NOTES;
		
		private System.Nullable<int> _DAMAGE;
		
		public EnemyBasesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BASE #]", Storage="_BASE__", DbType="SmallInt")]
		public System.Nullable<short> BASE__
		{
			get
			{
				return this._BASE__;
			}
			set
			{
				if ((this._BASE__ != value))
				{
					this._BASE__ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CLAIMED BY]", Storage="_CLAIMED_BY", DbType="NVarChar(50)")]
		public string CLAIMED_BY
		{
			get
			{
				return this._CLAIMED_BY;
			}
			set
			{
				if ((this._CLAIMED_BY != value))
				{
					this._CLAIMED_BY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATTACKS", DbType="Int")]
		public System.Nullable<int> ATTACKS
		{
			get
			{
				return this._ATTACKS;
			}
			set
			{
				if ((this._ATTACKS != value))
				{
					this._ATTACKS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARS", DbType="SmallInt")]
		public System.Nullable<short> STARS
		{
			get
			{
				return this._STARS;
			}
			set
			{
				if ((this._STARS != value))
				{
					this._STARS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATETIME", DbType="Int")]
		public System.Nullable<int> DATETIME
		{
			get
			{
				return this._DATETIME;
			}
			set
			{
				if ((this._DATETIME != value))
				{
					this._DATETIME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEST", DbType="NVarChar(50)")]
		public string BEST
		{
			get
			{
				return this._BEST;
			}
			set
			{
				if ((this._BEST != value))
				{
					this._BEST = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTES", DbType="VarChar(100)")]
		public string NOTES
		{
			get
			{
				return this._NOTES;
			}
			set
			{
				if ((this._NOTES != value))
				{
					this._NOTES = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAMAGE", DbType="Int")]
		public System.Nullable<int> DAMAGE
		{
			get
			{
				return this._DAMAGE;
			}
			set
			{
				if ((this._DAMAGE != value))
				{
					this._DAMAGE = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memberships")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowsStart;
		
		private string _Comment;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Membership()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowsStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowsStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowsStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowsStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowsStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowsStart");
					this.OnFailedPasswordAnswerAttemptWindowsStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Membership", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Membership = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private string _Location;
		
		private System.Nullable<int> _Level;
		
		private System.Nullable<short> _TownHall;
		
		private System.Nullable<bool> _IsEligible;
		
		private string _GameTag;
		
		private string _DiscordId;
		
		private string _GameName;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntitySet<UserWarning> _UserWarnings;
		
		private EntityRef<Membership> _Membership;
		
		private EntitySet<CurWarAttack> _CurWarAttacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLevelChanging(System.Nullable<int> value);
    partial void OnLevelChanged();
    partial void OnTownHallChanging(System.Nullable<short> value);
    partial void OnTownHallChanged();
    partial void OnIsEligibleChanging(System.Nullable<bool> value);
    partial void OnIsEligibleChanged();
    partial void OnGameTagChanging(string value);
    partial void OnGameTagChanged();
    partial void OnDiscordIdChanging(string value);
    partial void OnDiscordIdChanged();
    partial void OnGameNameChanging(string value);
    partial void OnGameNameChanged();
    #endregion
		
		public User()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._UserWarnings = new EntitySet<UserWarning>(new Action<UserWarning>(this.attach_UserWarnings), new Action<UserWarning>(this.detach_UserWarnings));
			this._Membership = default(EntityRef<Membership>);
			this._CurWarAttacks = new EntitySet<CurWarAttack>(new Action<CurWarAttack>(this.attach_CurWarAttacks), new Action<CurWarAttack>(this.detach_CurWarAttacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownHall", DbType="SmallInt")]
		public System.Nullable<short> TownHall
		{
			get
			{
				return this._TownHall;
			}
			set
			{
				if ((this._TownHall != value))
				{
					this.OnTownHallChanging(value);
					this.SendPropertyChanging();
					this._TownHall = value;
					this.SendPropertyChanged("TownHall");
					this.OnTownHallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEligible", DbType="Bit")]
		public System.Nullable<bool> IsEligible
		{
			get
			{
				return this._IsEligible;
			}
			set
			{
				if ((this._IsEligible != value))
				{
					this.OnIsEligibleChanging(value);
					this.SendPropertyChanging();
					this._IsEligible = value;
					this.SendPropertyChanged("IsEligible");
					this.OnIsEligibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTag", DbType="VarChar(15)")]
		public string GameTag
		{
			get
			{
				return this._GameTag;
			}
			set
			{
				if ((this._GameTag != value))
				{
					this.OnGameTagChanging(value);
					this.SendPropertyChanging();
					this._GameTag = value;
					this.SendPropertyChanged("GameTag");
					this.OnGameTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscordId", DbType="VarChar(25)")]
		public string DiscordId
		{
			get
			{
				return this._DiscordId;
			}
			set
			{
				if ((this._DiscordId != value))
				{
					this.OnDiscordIdChanging(value);
					this.SendPropertyChanging();
					this._DiscordId = value;
					this.SendPropertyChanged("DiscordId");
					this.OnDiscordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="VarChar(100)")]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this.OnGameNameChanging(value);
					this.SendPropertyChanging();
					this._GameName = value;
					this.SendPropertyChanged("GameName");
					this.OnGameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserWarning", Storage="_UserWarnings", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserWarning> UserWarnings
		{
			get
			{
				return this._UserWarnings;
			}
			set
			{
				this._UserWarnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Membership", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.User = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CurWarAttack", Storage="_CurWarAttacks", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<CurWarAttack> CurWarAttacks
		{
			get
			{
				return this._CurWarAttacks;
			}
			set
			{
				this._CurWarAttacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserWarnings(UserWarning entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserWarnings(UserWarning entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CurWarAttacks(CurWarAttack entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CurWarAttacks(CurWarAttack entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurWarAttacks")]
	public partial class CurWarAttack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AttackID;
		
		private System.Nullable<System.Guid> _WarID;
		
		private System.Nullable<System.Guid> _EnemyBaseID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.Nullable<short> _Stars;
		
		private System.DateTime _DateTime;
		
		private string _AttackType;
		
		private System.Nullable<int> _Damage;
		
		private EntityRef<EnemyBase> _EnemyBase;
		
		private EntityRef<User> _User;
		
		private EntityRef<War> _War;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttackIDChanging(System.Guid value);
    partial void OnAttackIDChanged();
    partial void OnWarIDChanging(System.Nullable<System.Guid> value);
    partial void OnWarIDChanged();
    partial void OnEnemyBaseIDChanging(System.Nullable<System.Guid> value);
    partial void OnEnemyBaseIDChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnStarsChanging(System.Nullable<short> value);
    partial void OnStarsChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnAttackTypeChanging(string value);
    partial void OnAttackTypeChanged();
    partial void OnDamageChanging(System.Nullable<int> value);
    partial void OnDamageChanged();
    #endregion
		
		public CurWarAttack()
		{
			this._EnemyBase = default(EntityRef<EnemyBase>);
			this._User = default(EntityRef<User>);
			this._War = default(EntityRef<War>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AttackID
		{
			get
			{
				return this._AttackID;
			}
			set
			{
				if ((this._AttackID != value))
				{
					this.OnAttackIDChanging(value);
					this.SendPropertyChanging();
					this._AttackID = value;
					this.SendPropertyChanged("AttackID");
					this.OnAttackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WarID
		{
			get
			{
				return this._WarID;
			}
			set
			{
				if ((this._WarID != value))
				{
					if (this._War.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarIDChanging(value);
					this.SendPropertyChanging();
					this._WarID = value;
					this.SendPropertyChanged("WarID");
					this.OnWarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnemyBaseID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnemyBaseID
		{
			get
			{
				return this._EnemyBaseID;
			}
			set
			{
				if ((this._EnemyBaseID != value))
				{
					if (this._EnemyBase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnemyBaseIDChanging(value);
					this.SendPropertyChanging();
					this._EnemyBaseID = value;
					this.SendPropertyChanged("EnemyBaseID");
					this.OnEnemyBaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stars", DbType="SmallInt")]
		public System.Nullable<short> Stars
		{
			get
			{
				return this._Stars;
			}
			set
			{
				if ((this._Stars != value))
				{
					this.OnStarsChanging(value);
					this.SendPropertyChanging();
					this._Stars = value;
					this.SendPropertyChanged("Stars");
					this.OnStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackType", DbType="NVarChar(50)")]
		public string AttackType
		{
			get
			{
				return this._AttackType;
			}
			set
			{
				if ((this._AttackType != value))
				{
					this.OnAttackTypeChanging(value);
					this.SendPropertyChanging();
					this._AttackType = value;
					this.SendPropertyChanged("AttackType");
					this.OnAttackTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="Int")]
		public System.Nullable<int> Damage
		{
			get
			{
				return this._Damage;
			}
			set
			{
				if ((this._Damage != value))
				{
					this.OnDamageChanging(value);
					this.SendPropertyChanging();
					this._Damage = value;
					this.SendPropertyChanged("Damage");
					this.OnDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnemyBase_CurWarAttack", Storage="_EnemyBase", ThisKey="EnemyBaseID", OtherKey="EnemyBaseID", IsForeignKey=true)]
		public EnemyBase EnemyBase
		{
			get
			{
				return this._EnemyBase.Entity;
			}
			set
			{
				EnemyBase previousValue = this._EnemyBase.Entity;
				if (((previousValue != value) 
							|| (this._EnemyBase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnemyBase.Entity = null;
						previousValue.CurWarAttacks.Remove(this);
					}
					this._EnemyBase.Entity = value;
					if ((value != null))
					{
						value.CurWarAttacks.Add(this);
						this._EnemyBaseID = value.EnemyBaseID;
					}
					else
					{
						this._EnemyBaseID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("EnemyBase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CurWarAttack", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CurWarAttacks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CurWarAttacks.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="War_CurWarAttack", Storage="_War", ThisKey="WarID", OtherKey="WarID", IsForeignKey=true)]
		public War War
		{
			get
			{
				return this._War.Entity;
			}
			set
			{
				War previousValue = this._War.Entity;
				if (((previousValue != value) 
							|| (this._War.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._War.Entity = null;
						previousValue.CurWarAttacks.Remove(this);
					}
					this._War.Entity = value;
					if ((value != null))
					{
						value.CurWarAttacks.Add(this);
						this._WarID = value.WarID;
					}
					else
					{
						this._WarID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("War");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttackStrats")]
	public partial class AttackStrat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AttackStratId;
		
		private string _AttackStrat1;
		
		private string _Details;
		
		private string _Spells;
		
		private string _Brief;
		
		private string _CompImage;
		
		private string _StratImage;
		
		private string _VidLink;
		
		private bool _TH8;
		
		private bool _TH9;
		
		private bool _TH10;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttackStratIdChanging(System.Guid value);
    partial void OnAttackStratIdChanged();
    partial void OnAttackStrat1Changing(string value);
    partial void OnAttackStrat1Changed();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnSpellsChanging(string value);
    partial void OnSpellsChanged();
    partial void OnBriefChanging(string value);
    partial void OnBriefChanged();
    partial void OnCompImageChanging(string value);
    partial void OnCompImageChanged();
    partial void OnStratImageChanging(string value);
    partial void OnStratImageChanged();
    partial void OnVidLinkChanging(string value);
    partial void OnVidLinkChanged();
    partial void OnTH8Changing(bool value);
    partial void OnTH8Changed();
    partial void OnTH9Changing(bool value);
    partial void OnTH9Changed();
    partial void OnTH10Changing(bool value);
    partial void OnTH10Changed();
    #endregion
		
		public AttackStrat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackStratId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AttackStratId
		{
			get
			{
				return this._AttackStratId;
			}
			set
			{
				if ((this._AttackStratId != value))
				{
					this.OnAttackStratIdChanging(value);
					this.SendPropertyChanging();
					this._AttackStratId = value;
					this.SendPropertyChanged("AttackStratId");
					this.OnAttackStratIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AttackStrat", Storage="_AttackStrat1", DbType="VarChar(50)")]
		public string AttackStrat1
		{
			get
			{
				return this._AttackStrat1;
			}
			set
			{
				if ((this._AttackStrat1 != value))
				{
					this.OnAttackStrat1Changing(value);
					this.SendPropertyChanging();
					this._AttackStrat1 = value;
					this.SendPropertyChanged("AttackStrat1");
					this.OnAttackStrat1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(300)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spells", DbType="NVarChar(300)")]
		public string Spells
		{
			get
			{
				return this._Spells;
			}
			set
			{
				if ((this._Spells != value))
				{
					this.OnSpellsChanging(value);
					this.SendPropertyChanging();
					this._Spells = value;
					this.SendPropertyChanged("Spells");
					this.OnSpellsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brief", DbType="NVarChar(MAX)")]
		public string Brief
		{
			get
			{
				return this._Brief;
			}
			set
			{
				if ((this._Brief != value))
				{
					this.OnBriefChanging(value);
					this.SendPropertyChanging();
					this._Brief = value;
					this.SendPropertyChanged("Brief");
					this.OnBriefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompImage", DbType="NVarChar(50)")]
		public string CompImage
		{
			get
			{
				return this._CompImage;
			}
			set
			{
				if ((this._CompImage != value))
				{
					this.OnCompImageChanging(value);
					this.SendPropertyChanging();
					this._CompImage = value;
					this.SendPropertyChanged("CompImage");
					this.OnCompImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StratImage", DbType="NVarChar(50)")]
		public string StratImage
		{
			get
			{
				return this._StratImage;
			}
			set
			{
				if ((this._StratImage != value))
				{
					this.OnStratImageChanging(value);
					this.SendPropertyChanging();
					this._StratImage = value;
					this.SendPropertyChanged("StratImage");
					this.OnStratImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VidLink", DbType="NVarChar(50)")]
		public string VidLink
		{
			get
			{
				return this._VidLink;
			}
			set
			{
				if ((this._VidLink != value))
				{
					this.OnVidLinkChanging(value);
					this.SendPropertyChanging();
					this._VidLink = value;
					this.SendPropertyChanged("VidLink");
					this.OnVidLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TH8", DbType="Bit NOT NULL")]
		public bool TH8
		{
			get
			{
				return this._TH8;
			}
			set
			{
				if ((this._TH8 != value))
				{
					this.OnTH8Changing(value);
					this.SendPropertyChanging();
					this._TH8 = value;
					this.SendPropertyChanged("TH8");
					this.OnTH8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TH9", DbType="Bit NOT NULL")]
		public bool TH9
		{
			get
			{
				return this._TH9;
			}
			set
			{
				if ((this._TH9 != value))
				{
					this.OnTH9Changing(value);
					this.SendPropertyChanging();
					this._TH9 = value;
					this.SendPropertyChanged("TH9");
					this.OnTH9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TH10", DbType="Bit NOT NULL")]
		public bool TH10
		{
			get
			{
				return this._TH10;
			}
			set
			{
				if ((this._TH10 != value))
				{
					this.OnTH10Changing(value);
					this.SendPropertyChanging();
					this._TH10 = value;
					this.SendPropertyChanged("TH10");
					this.OnTH10Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarNews")]
	public partial class WarNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NewsID;
		
		private string _News;
		
		private System.Nullable<System.DateTime> _PostDateTime;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(System.Guid value);
    partial void OnNewsIDChanged();
    partial void OnNewsChanging(string value);
    partial void OnNewsChanged();
    partial void OnPostDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPostDateTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public WarNew()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_News", DbType="VarChar(MAX)")]
		public string News
		{
			get
			{
				return this._News;
			}
			set
			{
				if ((this._News != value))
				{
					this.OnNewsChanging(value);
					this.SendPropertyChanging();
					this._News = value;
					this.SendPropertyChanged("News");
					this.OnNewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostDateTime
		{
			get
			{
				return this._PostDateTime;
			}
			set
			{
				if ((this._PostDateTime != value))
				{
					this.OnPostDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PostDateTime = value;
					this.SendPropertyChanged("PostDateTime");
					this.OnPostDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class tvfGetAttendanceResult
	{
		
		private System.Nullable<int> _Attended;
		
		private System.Nullable<int> _Totalwars;
		
		private System.Nullable<int> _Attendance;
		
		public tvfGetAttendanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attended", DbType="Int")]
		public System.Nullable<int> Attended
		{
			get
			{
				return this._Attended;
			}
			set
			{
				if ((this._Attended != value))
				{
					this._Attended = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Totalwars", DbType="Int")]
		public System.Nullable<int> Totalwars
		{
			get
			{
				return this._Totalwars;
			}
			set
			{
				if ((this._Totalwars != value))
				{
					this._Totalwars = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="Int")]
		public System.Nullable<int> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this._Attendance = value;
				}
			}
		}
	}
	
	public partial class tvfGetCurSeasonAttendanceResult
	{
		
		private System.Nullable<int> _Attended;
		
		private System.Nullable<int> _Totalwars;
		
		private System.Nullable<int> _Attendance;
		
		public tvfGetCurSeasonAttendanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attended", DbType="Int")]
		public System.Nullable<int> Attended
		{
			get
			{
				return this._Attended;
			}
			set
			{
				if ((this._Attended != value))
				{
					this._Attended = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Totalwars", DbType="Int")]
		public System.Nullable<int> Totalwars
		{
			get
			{
				return this._Totalwars;
			}
			set
			{
				if ((this._Totalwars != value))
				{
					this._Totalwars = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="Int")]
		public System.Nullable<int> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this._Attendance = value;
				}
			}
		}
	}
	
	public partial class tvfMembersAttendanceResult
	{
		
		private string _Username;
		
		private System.Nullable<int> _CurrentSeason;
		
		private string _CurrentSeasonStr;
		
		private System.Nullable<int> _LastSeason;
		
		private string _LastSeasonStr;
		
		private System.Nullable<int> _Overall;
		
		private string _OverallStr;
		
		public tvfMembersAttendanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentSeason", DbType="Int")]
		public System.Nullable<int> CurrentSeason
		{
			get
			{
				return this._CurrentSeason;
			}
			set
			{
				if ((this._CurrentSeason != value))
				{
					this._CurrentSeason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentSeasonStr", DbType="NVarChar(30)")]
		public string CurrentSeasonStr
		{
			get
			{
				return this._CurrentSeasonStr;
			}
			set
			{
				if ((this._CurrentSeasonStr != value))
				{
					this._CurrentSeasonStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSeason", DbType="Int")]
		public System.Nullable<int> LastSeason
		{
			get
			{
				return this._LastSeason;
			}
			set
			{
				if ((this._LastSeason != value))
				{
					this._LastSeason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSeasonStr", DbType="NVarChar(30)")]
		public string LastSeasonStr
		{
			get
			{
				return this._LastSeasonStr;
			}
			set
			{
				if ((this._LastSeasonStr != value))
				{
					this._LastSeasonStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overall", DbType="Int")]
		public System.Nullable<int> Overall
		{
			get
			{
				return this._Overall;
			}
			set
			{
				if ((this._Overall != value))
				{
					this._Overall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallStr", DbType="NVarChar(30)")]
		public string OverallStr
		{
			get
			{
				return this._OverallStr;
			}
			set
			{
				if ((this._OverallStr != value))
				{
					this._OverallStr = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
